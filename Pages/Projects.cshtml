@page
@model ProjectsModel
@{
    ViewData["Title"] = "Projects";
}

<div class="row text-center">
    <div class="row">
        <div class="col-lg-4">
            <a href="https://github.com/joey32793/realword-dotnet-clean-architecture" target="_blank">
                <img class="img-thumbnail" src="images/conduit.png" alt="Conduit thumbnail"/>
            </a>
            <hr/>
            <h5>Conduit: The Realworld Challenge</h5>
            <p>
                Goodbye Hello World&trade; programs and todo lists ad inifinitum, move over for the Realworld Challenge. 
                This is a challenge issued by GitHub user <a href="https://github.com/gothinkster/">Thinkster</a> to put
                developers to the test, where using their language and frontend/backend framework of their choice adhering
                to a strict API contract, develop Conduit, a clone of the blogging site Medium. My submission utilizes
                .NET Core and clean architecture, including full API contract unit and integration tests, CQRS API design,
                and domain-driven design. Future features include a fully integrated frontend using server-side Blazor, demonstrating
                the power of C# and .NET Core on both the client and the server.
            </p>
        </div>
        <div class="col-lg-4">
            <a href="https://github.com/joey32793/Brewdude" target="_blank">
                <img class="img-thumbnail" src="images/brewdude_thumbnail.jpg" alt="Brewdude thumbnail"/>
            </a>
            <hr/>
            <h5 style="font-family: 'Bungee Inline', sans-serif;">Brewdude</h5>
            <p>
                Yet again, another application centered entirely around beer. Brewdude is a passion project turned free, open source
                API that seeks to solve provide the community with a one stop shop for all things beer. Brewdude is an ongoing project,
                built with .NET Core and clean architecture in mind, utilizing libraries like MediatR, Fluent Validator, and AutoMapper to name a few.
                Feel free to checkout the project, and if you'd like, go ahead and add a feature... I'm looking for contributors!
            </p>
        </div>
        <div class="col-lg-4">
            <a href="https://reddingsalarypeeper.herokuapp.com" target="_blank">
                <img class="img-thumbnail" src="images/salarypeeker.png" alt="Redding Salary Peeper thumbnail"/>
            </a>
            <hr/>
            <h5 style="font-family: sans-serif;">Redding Salary Peeper</h5>
            <p>
                A sister application to Budget Peeker, Redding Salary Peeper is an analogous civic minded project that consolidates
                publically available salary data for public sector employees for both the City of Redding and Shasta County.
                The motivation for this project was to provide a more receptive interface for this information, sourcing data
                from <a href="https://transparentcalifornia.com" target="_blank">Transparent California</a>. Built with ASP.NET Core 2.1
                on the backend and and Angular 2+ on the frontend.
            </p>
        </div>
    </div>
    <hr/>
    <div class="row">
        <div class="col-lg-4">
            <a href="https://budgetpeeker.azurewebsites.net" target="_blank">
                <img class="img-thumbnail" src="images/budgetpeeker.png" alt="Budget Peeker thumbnail"/>
            </a>
            <hr/>
            <h5 style="font-family: 'Montserrat', sans-serif;">Budget Peeker</h5>
            <p>
                As a self-proclaimed civic minded coder and recent transplant to the Sacramento area, I wanted a tool that the
                public could use to help increase their perceived transparency into the City of Sacramento's financial data.
                Built with ASP.NET Core and SQLite3, this app helps to find data for users corresponding to the approved Sacramento
                budget for fiscal years 2015 through 2018.
            </p>
        </div>
        <div class="col-lg-4">
            <a href="https://brewdogger.azurewebsites.net" target="_blank">
                <img class="img-thumbnail" src="images/brewdogger.png" alt="Brewdogger thumbnail"/>
            </a>
            <hr/>
            <h5 style="font-family: 'Bungee Inline', sans-serif;">Brewdogger</h5>
            <p>
                I wanted a place where I could search for any beer I could think of, but alas, could not find an app I liked.
                So... why not build one? Brewdogger was built with Angular 4 on the frontend coupled with ASP.NET Core 2.0
                on the backend, along with the help of the BreweryDB API, and deployed using Azure. Search for beers and
                breweries at your own leisure, you might find something new!
            </p>
        </div>
        <div class="col-lg-4">
            <a href="http://readdit-django.herokuapp.com/" target="_blank">
                <img class="img-thumbnail" src="images/readdit.jpg" alt="Readdit thumbnail"/>
            </a>
            <hr/>
            <h5 style="font-family: sans-serif;">Readdit</h5>
            <p>
                Welcome to Readdit: the backpage of the internet (a Reddit clone, more or less). The result of weekend
                curiosity of Django. In astronomy and astophysics, Python is all the rage and a language near and dear to my
                numerical computing heart. So, why not take it for a spin on the web? Sign up, post a URL, test it out...
                its just as good as the real thing (not even close).
            </p>
        </div>
    </div>
</div>
